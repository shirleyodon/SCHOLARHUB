# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Deployment to minikube

on:
  push:
    branches: ["test"]

jobs:
  backend:
    name: Test, build and push backend
    runs-on: ubuntu-latest
    environment: TEST

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        if: contains(github.event.head_commit.message, 'backend')
        run: |
          cd backend/
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        if: contains(github.event.head_commit.message, 'backend')
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run backend unit test
        if: contains(github.event.head_commit.message, 'backend')
        run: |
          cd backend/
          python launch_tests.py

      - name: Build and push to DockerHub
        if: contains(github.event.head_commit.message, 'backend')
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: tafitashirley/scholarhub-backend
          tags: $GITHUB_SHA
          directory: backend
          dockerfile: backend/Dockerfile
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Do nothing
        if: ${{ !contains(github.event.head_commit.message, 'backend') }}
        run: echo "The change on the commit do not affect backend files"

  frontend:
    name: Test, build and push frontend
    runs-on: ubuntu-latest
    environment: TEST

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        if: contains(github.event.head_commit.message, 'frontend')
        run: |
          cd frontend/
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        if: contains(github.event.head_commit.message, 'frontend')
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run frontend unit test
        if: contains(github.event.head_commit.message, 'frontend')
        run: |
          cd frontend/
          python launch_tests.py

      - name: Build and push to DockerHub
        if: contains(github.event.head_commit.message, 'frontend')
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: tafitashirley/scholarhub-frontend
          tags: $GITHUB_SHA
          directory: frontend
          dockerfile: frontend/Dockerfile
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Do nothing
        if: ${{ !contains(github.event.head_commit.message, 'frontend') }}
        run: echo "The change on the commit do not affect frontend files"

  deployment:
    name: Deployment to minikube
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    environment: TEST

    steps:
      - uses: actions/checkout@v3

      - name: Start minikube
        uses: medyagh/setup-minikube@latest

      - name: Delete all existing resources
        run: kubectl delete all --all

      - name: Update backend image tag in manifest
        if: contains(github.event.head_commit.message, 'backend')
        run: |
          sed -i 's|tafitashirley/scholarhub-backend:[a-zA-Z0-9_.-]*|tafitashirley/scholarhub-backend:${GITHUB_SHA}|g' manifests/06-flask-backend.yaml
          echo "Content after sed:"
          cat manifests/06-flask-backend.yaml

      - name: Update frontend image tag in manifest
        if: contains(github.event.head_commit.message, 'frontend')
        run: |
          sed -i 's|tafitashirley/scholarhub-frontend:[a-zA-Z0-9_.-]*|tafitashirley/scholarhub-frontend:${GITHUB_SHA}|g' manifests/07-flask-frontend.yaml
          echo "Content after sed:"
          cat manifests/07-flask-frontend.yaml
      
      - name: Deploy to minikube
        run: |
          kubectl apply -f manifests/

      - name: List all deployed services
        run: |
          minikube service list
      
      - name: List all used images with tags
        run: |
          echo "GITHUB_SHA=${GITHUB_SHA}"
          kubectl get pods -n default -o jsonpath="{..image}" |\
          tr -s '[[:space:]]' '\n' |\
          sort |\
          uniq -c
