# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Deployment to minikube

on:
  push:
    branches: ["test"]

jobs:
  backend:
    runs-on: ubuntu-latest
    environment: TEST
    if: contains(github.event.head_commit.message, 'backend')

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd backend/
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run backend unit test
        run: |
          cd backend/
          python launch_tests.py

      - name: Build and push to DockerHub
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          context: .
          dockerfile: backend/Dockerfile
          registry: docker.io
          image: tafitashirley/scholarhub-backend
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  frontend:
    runs-on: ubuntu-latest
    environment: TEST
    if: contains(github.event.head_commit.message, 'frontend')

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd frontend/
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run frontend unit test
        run: |
          cd frontend/
          python launch_tests.py

      - name: Build and push to DockerHub
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: tafitashirley/scholarhub-frontend
          dockerfile: ./frontend/Dockerfile
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
