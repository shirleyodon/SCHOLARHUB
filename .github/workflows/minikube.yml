# This workflow set up a python environment to test, build&push docker image and deploy it on minikube

name: Deployment to minikube

on:
  push:
    branches: ["test"]

jobs:
  backend:
    name: Test, build and push backend
    runs-on: ubuntu-latest
    environment: TEST

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        if: contains(github.event.head_commit.message, 'backend')
        run: |
          cd backend/
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        if: contains(github.event.head_commit.message, 'backend')
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run backend unit test
        if: contains(github.event.head_commit.message, 'backend')
        run: |
          cd backend/
          python launch_tests.py

      - name: Build and push to DockerHub
        if: contains(github.event.head_commit.message, 'backend')
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: tafitashirley/scholarhub-backend
          tags: $GITHUB_SHA
          directory: backend
          dockerfile: backend/Dockerfile
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure AWS credentials
        if: contains(github.event.head_commit.message, 'backend')
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Save the image TAG to S3
        if: contains(github.event.head_commit.message, 'backend')
        run: |
          echo "$GITHUB_SHA" > backend-tag.txt
          aws s3 cp backend-tag.txt s3://scholarhub-s3/lastest-image-tag/backend-tag.txt

      - name: Do nothing
        if: ${{ !contains(github.event.head_commit.message, 'backend') }}
        run: echo "The change on the commit do not affect backend files"

  frontend:
    name: Test, build and push frontend
    runs-on: ubuntu-latest
    environment: TEST

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        if: contains(github.event.head_commit.message, 'frontend')
        run: |
          cd frontend/
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        if: contains(github.event.head_commit.message, 'frontend')
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run frontend unit test
        if: contains(github.event.head_commit.message, 'frontend')
        run: |
          cd frontend/
          python launch_tests.py

      - name: Build and push to DockerHub
        if: contains(github.event.head_commit.message, 'frontend')
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: tafitashirley/scholarhub-frontend
          tags: $GITHUB_SHA
          directory: frontend
          dockerfile: frontend/Dockerfile
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Configure AWS credentials
        if: contains(github.event.head_commit.message, 'frontend')
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Save the image TAG to S3
        if: contains(github.event.head_commit.message, 'frontend')
        run: |
          echo "$GITHUB_SHA" > frontend-tag.txt
          aws s3 cp frontend-tag.txt s3://scholarhub-s3/lastest-image-tag/frontend-tag.txt
          
      - name: Do nothing
        if: ${{ !contains(github.event.head_commit.message, 'frontend') }}
        run: echo "The change on the commit do not affect frontend files"

  deployment:
    name: Deployment to minikube
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    environment: TEST

    steps:
      - uses: actions/checkout@v3

      # - name: Start minikube
      #   uses: medyagh/setup-minikube@latest

      # - name: Delete all existing resources
      #   run: kubectl delete all --all

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Download latest image tags from S3
        run: |
          aws s3 cp s3://scholarhub-s3/lastest-image-tag/backend-tag.txt backend-tag.txt
          aws s3 cp s3://scholarhub-s3/lastest-image-tag/frontend-tag.txt frontend-tag.txt
          LATEST_BACKEND_TAG=$(cat backend-tag.txt)
          LATEST_FRONTEND_TAG=$(cat frontend-tag.txt)

      - name: Update backend image tag in manifest
        run: |
          echo $LATEST_BACKEND_TAG
          egrep -i 'image: tafitashirley' manifests/06-flask-backend.yaml
          sed -i -e "s|image: tafitashirley/scholarhub-backend:.*|image: tafitashirley/scholarhub-backend:$LATEST_BACKEND_TAG|g" manifests/06-flask-backend.yaml
          egrep -i 'image: tafitashirley' manifests/06-flask-backend.yaml

      - name: Update frontend image tag in manifest
        run: |
          echo $LATEST_FRONTEND_TAG
          egrep -i 'image: tafitashirley' manifests/07-flask-frontend.yaml
          sed -i -e "s|image: tafitashirley/scholarhub-frontend:.*|image: tafitashirley/scholarhub-frontend:$LATEST_FRONTEND_TAG|g" manifests/07-flask-frontend.yaml
          egrep -i 'image: tafitashirley' manifests/07-flask-frontend.yaml
      
      # - name: Deploy to minikube
      #   run: |
      #     kubectl apply -f manifests/

      # - name: List all deployed services
      #   run: |
      #     minikube service list
      
      # - name: List all used images with tags
      #   run: |
      #     echo "SHA : $GITHUB_SHA"
      #     echo "Images list"
      #     kubectl get pods -n default -o jsonpath="{..image}" |\
      #     tr -s '[[:space:]]' '\n' |\
      #     sort |\
      #     uniq -c
